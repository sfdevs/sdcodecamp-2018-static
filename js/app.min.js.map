{"version":3,"sources":["multilevel-nav.js","off-canvas.js","main.js"],"names":["mlnCurrent","$","fn","multilevelNav","options","this","each","settings","$this","classParent","classNavbar","classNavList","classHasChild","classChildListNav","classToggleBtn","classToggleLink","classToggleBtnSymbol","classExpandBtn","classChildCollapse","classChildList","classChildMega","classHasChildShowing","classChildHasMega","classChildOverflowVisible","classChildTransitioning","classExpanderShowing","classExpanderTransitioning","classChildExpandedOnLoad","classChildListFlowRight","classWholeLinkToggler","mlnParentList","mlnExpander","dataBreakpoint","attr","countChild","countExpander","isPageLoaded","mlnToggleChild","action","obj","animate","collapseHeight","ariaExpandedValue","ariaHiddenValue","mlnHasChild","closest","mlnToggleChildCollapse","find","undefined","outerHeight","css","setTimeout","childSpeed","addClass","length","hasClass","navbarMenuBackdrop","navbarMegaMenuBackdrop","removeClass","height","min-height","mlnToggleExpander","viewport","width","children","parent","expanderSpeed","e","window","a","document","documentElement","body","extend","hoverIntent","hoverIntentTimeout","autoClose","autoDirection","toggleOnClickOnly","expandActiveItem","wholeLinkToggler","topLevelWholeLinkToggler","activeSelector","windowWidth","assignFlowDirection","offset","left","outerWidth","activeItem","parents","last","resize","newWindowWidth","resizeTO","clearTimeout","trigger","wholeObject","replace","on","wrap","append","siblings","parentCollapse","prependTo","linkText","text","closestToggleBtn","ariaControlsValue","ariaHasPopupValue","appendTo","focus","preventDefault","hasChildParent","associatedMenu","hasChildSiblings","not","over","timeout","out","delay","hover","dataNavbar","keyCode","target","get","activeElement","bind","jQuery","focusBeforeOffCanvas","touchStartX","classHeader","classOffCanvas","classToggleButton","classOffCanvasNavRight","classSiteHeaderFixed","classOffCanvasOverlay","classJsOffCanvasHidden","classJsNavIn","toggleBtn","offCanvasElement","offCanvasBody","offCanvasCanvas","headerHeight","docScrollLoc","currentLoc","offCanvasBreakpoint","offCanvasDuration","isiOS","navigator","userAgent","match","toggleOffCanvas","scrollTop","removeAttr","top","firstTabbable","first","lastTabbable","childShowingAmount","which","shiftKey","trapKeyboardToOC","setOffCanvasHeight","setHeight","offCanvasHeight","surroundHeight","ready","prepend","originalEvent","touches","clientX","touchRight","changedTouches","replaceBodyBg","el","gifUrl","altText","clickCount","origClickCount","clickCounter","replaceWithThisGif","musicTrack","clickTimeout","randSoundID","budsCount","ytIDIndex","soundIDArray","totalTime","embedURL","Math","floor","random","startTime","parseInt","split","insertAfter","checkScrollTop","className","classList","add","remove","scrollable","addEventListener","snooperMouseIdle","snooperFollower","snooper","followBoundaryOffsetX","mousemove","pageX","snooperHtml","ufoTimer","abductEventEl","abductor","abductorSelected","ufoHTML","eNum","is","one","keyNum","konamiNum"],"mappings":"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","file":"app.min.js","sourcesContent":["var mlnCurrent = 1;\n\n(function($) {\n    'use strict';\n\n    $.fn.multilevelNav = function(options) {\n        $(this).each(function() {\n            var $this = $(this),\n\n                // CSS class selector names\n                classParent = 'mln',\n                classNavbar = 'mln--navbar',\n                classNavList = 'mln__list',\n                classExpander = 'mln__expander',\n                classHasChild = 'mln__has-child',\n                classChildListNav = 'mln__child__nav',\n                classToggleBtn = 'mln__toggle-btn',\n                classToggleLink = 'mln__toggle-link',\n                classToggleIndicator = 'mln__toggle-indicatior',\n                classToggleBtnSymbol = 'mln__toggle-btn__symbol',\n                classExpandBtn = 'mln__expand-btn',\n                classChildCollapse = 'mln__child__collapse',\n                classChildList = 'mln__child__list',\n                classChildMega = 'mln__child__mega-menu',\n                classHasChildShowing = 'mln__has-child--showing',\n                classChildHasMega = 'mln__has-child--mega-menu',\n                classChildOverflowVisible = 'mln__child--overflow-visible',\n                classChildTransitioning = 'mln__child--transitioning',\n                classExpanderShowing = 'mln__expander--showing',\n                classExpanderTransitioning = 'mln__expander--transitioning',\n                classChildExpandedOnLoad = 'mln__has-child--expand-on-load',\n                classChildListFlowRight = 'mln__child--flow-right',\n                classWholeLinkToggler = 'mln--whole-link-expand',\n                classTopLevelWholeLinkToggler = 'mln--top-level-whole-link-expand',\n\n                // Elements\n                mlnParentList = $('.' + classNavList, $this),\n                mlnExpander = $('.' + classExpander, $this),\n\n                // Various\n                dataBreakpoint = $this.attr('data-mln-breakpoint'),\n                countChild = 1,\n                countExpander = 1,\n                isPageLoaded = false,\n                settings,\n                hoverTimeout,\n                toggleBtnVerbiage = 'Toggle items under';\n\n            // Setting defaults\n            settings = $.extend({\n                'hoverIntent': false,\n                'hoverIntentTimeout': 250,\n                'autoClose': true,\n                'autoDirection': false,\n                'toggleOnClickOnly': false,\n                'expandActiveItem': false,\n                'wholeLinkToggler': false,\n                'topLevelWholeLinkToggler': false,\n                'navbarMenuBackdrop': false,\n                'navbarMegaMenuBackdrop': false,\n                'activeSelector': '.active'\n            }, options);\n\n            // Toggle child menu(s)\n            function mlnToggleChild(action, obj, animate) {\n                var collapseHeight = 0,\n                    mlnHasChild = obj.closest('.' + classHasChild),\n                    mlnToggleChildCollapse = mlnHasChild.find('> .' + classChildCollapse + ':first'),\n                    mlnParentLink = mlnHasChild.find('.' + classChildListNav + ':first a'),\n                    ariaExpandedValue,\n                    ariaHiddenValue,\n                    mlnAnyShowing;\n\n                // Figure out what aria values to use\n                if (action === 'show') {\n                    ariaExpandedValue = 'true';\n                    ariaHiddenValue = 'false';\n                } else if (action === 'hide' || action === undefined) {\n                    ariaExpandedValue = 'false';\n                    ariaHiddenValue = 'true';\n                }\n\n                // Grab height of inner collpase elements\n                collapseHeight = $('.' + classChildCollapse + '__helper', mlnToggleChildCollapse).outerHeight();\n\n                // Disable button while showing/hiding\n                mlnHasChild.find('.' + classToggleBtn + ':first, .' + classToggleLink + ':first')\n                    .attr('aria-expanded', ariaExpandedValue)\n                    .css('pointer-events', 'none');\n\n                // After showing/hiding is done, enable toggle button and parent link\n                setTimeout(function() {\n                    mlnHasChild.find('.' + classToggleBtn + ', .' + classToggleLink)\n                        .css('pointer-events', '');\n                }, childSpeed);\n\n                // Show collapsible child elements\n                if (action === 'show') {\n                    mlnHasChild.addClass(classHasChildShowing);\n\n                    mlnAnyShowing = $this.find('.' + classHasChildShowing);\n\n                    // Add class to body for regular menu backdrop\n                    if (mlnAnyShowing.length && $this.hasClass(classNavbar) &&\n                        settings.navbarMenuBackdrop === true) {\n\n                        $('body').addClass('js-menu-showing');\n                    }\n\n                    // Add class to body for mega menu backdrop\n                    if (mlnHasChild.hasClass(classChildHasMega) &&\n                        $this.hasClass(classNavbar) &&\n                        settings.navbarMegaMenuBackdrop === true) {\n\n                        $('body').addClass('js-mega-menu-showing');\n                    }\n\n                    if (animate === true) {\n                        mlnToggleChildCollapse.addClass(classChildTransitioning)\n                            .css('height', collapseHeight)\n                            .attr('aria-hidden', ariaHiddenValue);\n\n                        setTimeout(function() {\n                            mlnToggleChildCollapse.css('height', 'auto')\n                                .removeClass(classChildTransitioning)\n                                .css('height', '');\n\n                                if(mlnToggleChildCollapse.attr('data-hover-status') === 'on'){\n                                    mlnToggleChildCollapse.addClass(classChildOverflowVisible);\n                                }\n                        }, childSpeed);\n                    } else {\n                        mlnToggleChildCollapse.css('height', 'auto')\n                            .attr('aria-hidden', ariaHiddenValue)\n                            .css('height', '')\n                            .addClass(classChildOverflowVisible);\n                    }\n                }\n\n                // Hide collapsible child elements\n                if (action === 'hide') {\n                    mlnHasChild.removeClass(classHasChildShowing);\n\n                    mlnAnyShowing = $('.' + classNavbar).find('.' + classHasChildShowing);\n\n                    if (!mlnAnyShowing.length && $('.' + classNavbar).length) {\n                        $('body').removeClass('js-menu-showing');\n                    }\n\n                    if (mlnHasChild.hasClass(classChildHasMega) &&\n                        !$('.' + classChildHasMega).hasClass(classHasChildShowing) &&\n                        $this.hasClass(classNavbar)) {\n\n                        $('body').removeClass('js-mega-menu-showing');\n                    }\n\n                    if (animate === true) {\n                        mlnToggleChildCollapse.addClass(classChildTransitioning)\n                            .removeClass(classChildOverflowVisible)\n                            .attr('aria-hidden', ariaHiddenValue)\n                            .css({\n                                'height': collapseHeight,\n                                'min-height': collapseHeight\n                            });\n\n                        setTimeout(function() {\n                            mlnToggleChildCollapse.css({\n                                'height': '',\n                                'min-height': ''\n                            });\n                        }, 100);\n\n                        setTimeout(function() {\n                            mlnToggleChildCollapse.removeClass(classChildTransitioning);\n                        }, childSpeed);\n                    } else {\n                        mlnToggleChildCollapse.removeClass(classChildOverflowVisible)\n                            .attr('aria-hidden', ariaHiddenValue)\n                            .css('height', '');\n                    }\n                }\n            }\n\n            // Show/Hide expander items\n            function mlnToggleExpander(animate) {\n                var collapseHeight = 0;\n\n                if (viewport().width < dataBreakpoint && animate !== false) {\n                    mlnExpander.children().each(function() {\n                        collapseHeight = collapseHeight + $(this).outerHeight();\n                    });\n\n                    if (!mlnExpander.hasClass(classExpanderShowing)) {\n\n                        mlnExpander.addClass(classExpanderTransitioning)\n                            .addClass(classExpanderShowing)\n                            .css('height', collapseHeight)\n                            .attr('aria-hidden', 'false')\n                            .parent().find('.' + classExpandBtn)\n                            .attr('aria-expanded', 'true');\n\n                        setTimeout(function() {\n                            mlnExpander.css('height', 'auto')\n                                .css('height', '')\n                                .removeClass(classExpanderTransitioning);\n                        }, expanderSpeed);\n\n                    } else {\n                        mlnExpander.addClass(classExpanderTransitioning)\n                            .css('height', collapseHeight)\n                            .attr('aria-hidden', 'true')\n                            .parent().find('.' + classExpandBtn)\n                            .attr('aria-expanded', 'false');\n\n                        setTimeout(function() {\n                            mlnExpander.removeClass(classExpanderShowing)\n                                .css('height', '');\n                        }, 100);\n\n                        setTimeout(function() {\n                            mlnExpander.removeClass(classExpanderTransitioning);\n                        }, expanderSpeed);\n                    }\n                }\n\n                // Adjust attributes without animating the expander menu\n                if (animate === false) {\n                    if (viewport().width < dataBreakpoint) {\n                        mlnExpander.removeClass(classExpanderShowing)\n                            .attr('aria-hidden', 'true')\n                            .parent().find('.' + classExpandBtn)\n                            .attr('aria-expanded', 'false');\n                    } else {\n                        mlnExpander.attr('aria-hidden', 'false')\n                            .parent().find('.' + classExpandBtn)\n                            .attr('aria-expanded', 'true');\n                    }\n                }\n            }\n\n            // Get browser width with or without scrollbar\n            function viewport() {\n                var e = window,\n                    a = 'inner';\n\n                if (!('innerWidth' in window)) {\n                    a = 'client';\n                    e = document.documentElement || document.body;\n                }\n\n                return {\n                    width: e[a + 'Width'],\n                    height: e[a + 'Height']\n                };\n            }\n\n            // Resize delay\n            var windowWidth = $(window).width();\n            $(window).resize(function() {\n                var newWindowWidth = $(window).width();\n\n                if (windowWidth !== newWindowWidth) {\n                    if (this.resizeTO) {\n                        clearTimeout(this.resizeTO);\n                    }\n                    this.resizeTO = setTimeout(function() {\n                        $(this).trigger('resizeEnd');\n                    }, 150);\n                }\n                windowWidth = newWindowWidth;\n            });\n\n            // Assign class to child items that run off the edge of the screen\n            function assignFlowDirection() {\n                if (settings.autoDirection === true) {\n                    setTimeout(function(){\n                        $('.' + classHasChild, mlnParentList).each(function() {\n                            var $this = $(this),\n                                mlnToggleChildOffset = ($this.offset().left -\n                                    $('body').offset().left) + ($this.outerWidth() * 2);\n\n                            if (mlnToggleChildOffset > viewport().width &&\n                                viewport().width >= dataBreakpoint) {\n                                $this.addClass(classChildListFlowRight);\n                            } else {\n                                $this.removeClass(classChildListFlowRight);\n                            }\n                        });\n                    }, 300);\n                }\n            }\n\n            // Keep items and parents with active class expanded on load\n            function expandActiveItem() {\n                if (settings.expandActiveItem === true) {\n                    var activeItem = settings.activeSelector;\n\n                    $(activeItem, mlnParentList).each(function() {\n                        var $this = $(this);\n\n                        $this.parents('.' + classHasChild).last()\n                            .addClass(classChildExpandedOnLoad);\n\n                        $this.parents('.' + classHasChild + '.' + classHasChild)\n                            .addClass(classChildExpandedOnLoad);\n\n                        $('.' + classChildExpandedOnLoad, mlnParentList).each(function() {\n                            if (isPageLoaded === false ||\n                                mlnParentList.closest('.' + classParent).hasClass(classNavbar) &&\n                                viewport().width < dataBreakpoint &&\n                                isPageLoaded !== true) {\n\n                                mlnToggleChild('show', $(this), false);\n                            }\n\n                            if (mlnParentList.closest('.' + classParent).hasClass(classNavbar) &&\n                                viewport().width >= dataBreakpoint) {\n\n                                mlnToggleChild('hide', $(this), false);\n                            }\n                        });\n                    });\n\n                    isPageLoaded = true;\n                }\n            }\n\n            // Start modifying the DOM\n            if (mlnParentList.length) {\n\n                // Get css transition time and convert to milliseconds\n                mlnParentList.addClass(classChildTransitioning);\n                var childSpeed = mlnParentList.css('transition-duration').replace('s', '') * 1000;\n                mlnParentList.removeClass(classChildTransitioning);\n\n                var expanderSpeed;\n                if (mlnExpander.length) {\n                    mlnExpander.addClass(classExpanderTransitioning);\n                    expanderSpeed = mlnExpander.css('transition-duration').replace('s', '') * 1000;\n                    mlnExpander.removeClass(classExpanderTransitioning);\n                } else {\n                    expanderSpeed = null;\n                }\n\n                // Open/close menu expander on smaller screen devices\n                $('.' + classExpandBtn, $this).on('click', function() {\n                    mlnToggleExpander();\n                });\n\n                // Find and modify mega menus\n                mlnParentList.find('.' + classChildMega)\n                    .wrap('<div class=\"' + classChildCollapse + '\" />')\n                    .wrap('<div class=\"' + classChildCollapse + '__helper\" />')\n                    .closest('li').addClass(classHasChild);\n\n                // Add mega menu backdrop\n                if (settings.navbarMegaMenuBackdrop === true) {\n                    $('body').append('<div class=\"mln-backdrop\"></div>');\n                }\n\n                // Find and modify child lists\n                mlnParentList.find('ul').each(function(){\n                    var $this = $(this);\n\n                    if ($this.siblings('.' + classChildCollapse).length) {\n                        var parentCollapse = $this.parent()\n                            .find('.' + classChildCollapse + '__helper');\n\n                        $this.addClass(classChildList)\n                            .prependTo(parentCollapse);\n\n                    } else if (!$this.closest('.' + classChildMega).length) {\n                        $this.addClass(classChildList)\n                            .wrap('<div class=\"' + classChildCollapse + '\" />')\n                            .wrap('<div class=\"' + classChildCollapse + '__helper\" />')\n                            .closest('li')\n                            .addClass(classHasChild);\n                    }\n                });\n\n                // Add modifier class to top level list items\n                $(' > li', mlnParentList).each(function(){\n                    $(this).addClass(classNavList + '__item--top-level');\n                });\n\n                // Add mega menu modifier class to top level\n                if (mlnParentList.find('.' + classChildMega).length) {\n                    mlnParentList.find('.' + classChildMega)\n                        .closest('li')\n                        .addClass(classChildHasMega);\n                }\n\n                // Wrap the parent <a> tag in it's own div\n                $('.' + classHasChild, mlnParentList).each(function() {\n                    var parentLink = $(this).find('> a');\n\n                    parentLink.wrap('<div class=\"' + classChildListNav + '\"></div>');\n                });\n\n                // Add a toggle button to list items with children\n                $('.' + classChildListNav + '', mlnParentList).each(function() {\n                    var $this = $(this),\n                        siblingLink = $this.find('> a'),\n                        linkText = siblingLink.text();\n\n                    $this.append('<button class=\"' + classToggleBtn + '\" type=\"button\"> ' +\n                        '<span class=\"' + classToggleBtnSymbol + '\"></span> ' + toggleBtnVerbiage + ' ' + linkText + '</button>');\n                });\n\n                // Assign IDs and attributes to child menu elements\n                $('.' + classChildCollapse, mlnParentList).each(function() {\n                    $(this).attr('aria-hidden', 'true')\n                        .attr('data-hover-status', 'off')\n                        .attr('id', 'mln' + mlnCurrent + 'ChildCollapse' + countChild)\n                        .parent().find('.' + classToggleBtn)\n                        .attr('aria-expanded', 'false')\n                        .attr('aria-haspopup', 'true')\n                        .attr('aria-controls', 'mln' + mlnCurrent + 'ChildCollapse' + countChild);\n\n                    countChild++;\n                });\n\n                // Assign IDs and aria attributes to expander elements\n                mlnExpander.each(function() {\n                    var $this = $(this);\n\n                    $this.attr('aria-hidden', 'true')\n                        .attr('id', 'mln' + mlnCurrent + 'Expander' + countExpander)\n                        .parent().find('.' + classExpandBtn)\n                        .attr('aria-haspopup', 'true')\n                        .attr('aria-expanded', 'false')\n                        .attr('aria-controls', 'mln' + mlnCurrent + 'Expander' + countExpander);\n\n                    countExpander++;\n                });\n\n                // Whole link click expand and/or top level whole link expand\n                if (settings.wholeLinkToggler === true || settings.topLevelWholeLinkToggler === true) {\n                    var wholeObject;\n\n                    if (settings.wholeLinkToggler === true) {\n                        wholeObject = $('.' + classChildListNav + ' > a', mlnParentList);\n\n                        $(mlnParentList).closest('.' + classParent)\n                            .addClass(classWholeLinkToggler);\n                    }\n\n                    if (settings.topLevelWholeLinkToggler === true) {\n                        wholeObject = $('> .' + classHasChild, mlnParentList)\n                            .find('> .' + classChildListNav + ' > a') ||\n                            $('> .' + classHasChild, mlnParentList)\n                            .siblings('.' + classHasChild)\n                            .find('> .' + classChildListNav + ' > a');\n\n                        $(mlnParentList).closest('.' + classParent)\n                            .removeClass(classWholeLinkToggler)\n                            .addClass(classTopLevelWholeLinkToggler);\n                    }\n\n                    wholeObject.each(function() {\n                        var $this = $(this),\n                            closestToggleBtn = $(this).closest('.' + classHasChild)\n                                .find('.' + classToggleBtn + ':first'),\n                            ariaExpandedValue = closestToggleBtn.attr('aria-expanded'),\n                            ariaControlsValue = closestToggleBtn.attr('aria-controls'),\n                            ariaHasPopupValue = closestToggleBtn.attr('aria-haspopup');\n\n                        $('<div class=\"' + classToggleIndicator + '\">' +\n                            '<span class=\"' + classToggleBtnSymbol + '\"></span></div>')\n                            .appendTo($this);\n\n                        $this.addClass(classToggleLink)\n                            .attr('role', 'button')\n                            .attr('aria-expanded', ariaExpandedValue)\n                            .attr('aria-controls', ariaControlsValue)\n                            .attr('aria-haspopup', ariaHasPopupValue)\n                            .on('click', function(e) {\n                                $this.focus();\n                                e.preventDefault();\n                                closestToggleBtn.trigger('click');\n                            });\n                    });\n                }\n\n                // Toggle-button click\n                $('.' + classToggleBtn, mlnParentList).on('click', function(e) {\n                    var $this = $(this),\n                        hasChildParent = $this.closest('.' + classHasChild),\n                        associatedMenu = $this.closest(hasChildParent)\n                            .find('.' + classChildCollapse + ':first'),\n                        hasChildSiblings = hasChildParent.parent()\n                            .find('.' + classHasChildShowing)\n                            .not(hasChildParent);\n\n                    if (viewport().width >= dataBreakpoint && settings.autoClose === true) {\n                        associatedMenu.attr('data-hover-status', 'off');\n                        mlnToggleChild('hide', hasChildSiblings, true);\n                    }\n\n                    if ($this.closest('.' + classHasChild).hasClass(classHasChildShowing)) {\n                        mlnToggleChild('hide', $this, true);\n                        associatedMenu.attr('data-hover-status', 'off');\n                    } else {\n                        mlnToggleChild('show', $this, true);\n                        associatedMenu.attr('data-hover-status', 'on');\n                    }\n                });\n\n                // Show/hide child menus with hoverIntent or just regular hover\n                if (settings.hoverIntent === true && settings.toggleOnClickOnly === false) {\n                    $('.' + classHasChild, mlnParentList).each(function() {\n                        var $this = $(this),\n                            associatedMenu = $this.find('.' + classChildCollapse + ':first');\n\n                        $this.hoverIntent({\n                            over: function() {\n                                associatedMenu.attr('data-hover-status', 'on');\n                                if (viewport().width >= dataBreakpoint) {\n                                    mlnToggleChild('show', $this, true);\n                                }\n                            },\n                            timeout: settings.hoverIntentTimeout,\n                            out: function() {\n                                associatedMenu.attr('data-hover-status', 'off');\n                                if (viewport().width >= dataBreakpoint && associatedMenu.attr('aria-hidden') === 'false') {\n                                    mlnToggleChild('hide', $this, true);\n                                }\n                            },\n                            delay: settings.hoverIntentTimeout\n                        });\n                    });\n                } else if (settings.toggleOnClickOnly === false) {\n                    $('.' + classHasChild, mlnParentList).each(function() {\n                        var $this = $(this),\n                            associatedMenu = $this.find('.' + classChildCollapse + ':first');\n\n                        $this.hover(function() {\n                            if (viewport().width >= dataBreakpoint) {\n                                if ($(this).closest('.' + classHasChild).hasClass(classHasChildShowing)) {\n                                    associatedMenu.attr('data-hover-status', 'off');\n                                    mlnToggleChild('hide', $(this), true);\n                                } else {\n                                    associatedMenu.attr('data-hover-status', 'on');\n                                    mlnToggleChild('show', $(this), true);\n                                }\n                            }\n                        });\n                    });\n                }\n\n                // Keyboarding\n                mlnParentList.each(function(){\n                    var $this = $(this);\n\n                    if ($this.closest('.' + classParent).hasClass(classNavbar)) {\n                        $this.attr('data-parent-has-navbar', 'true');\n                    }\n\n                    var dataNavbar = $('[data-parent-has-navbar]');\n\n                    $this.on('keydown', function(e){\n                        var pressedKeyCode = e.keyCode;\n\n                        // Escape key pressed\n                        if (pressedKeyCode === 27) {\n                            var eTarget = $(e.target),\n                                associatedMenu = eTarget.closest('.' + classHasChildShowing);\n\n                            // Set focus on parent toggle button\n                            if (associatedMenu.length) {\n                                associatedMenu.closest('.' + classHasChild).find('.' + classToggleBtn + ', .' + classToggleLink).get(0).focus();\n\n                                // Hide associated or closest parent menu\n                                mlnToggleChild('hide', associatedMenu, true);\n                            }\n                        }\n                    });\n\n                    // Close active navbar menu if focus is outside of it\n                    $(document).on('focusin', function(e){\n                        if ($(document.activeElement).closest('[data-parent-has-navbar]').length === 0 && viewport().width >= dataBreakpoint ) {\n                            mlnToggleChild('hide', dataNavbar.find('.' + classHasChildShowing), true);\n                        }\n                    });\n                });\n\n                // Close all child menus if clicking off of the menu\n                $(document).on('click', function(e) {\n                    if ($(e.target).closest('.' + classNavList + ' > li, .' + classExpandBtn + '', $this).length === 0 &&\n                        settings.autoClose === true &&\n                        viewport().width >= dataBreakpoint &&\n                        settings.expandActiveItem === false &&\n                        !$('body').find('.' + classChildTransitioning).length) {\n\n                        mlnToggleChild('hide', $('.' + classHasChildShowing, $this), true);\n                    }\n                });\n\n                // Resizer\n                $(window).bind('resizeEnd', function() {\n                    if (viewport().width >= dataBreakpoint && settings.autoClose === true &&\n                        settings.expandActiveItem === false) {\n\n                        mlnToggleChild('hide', $('.' + classHasChildShowing, $this), false);\n                        mlnExpander.css('height', '')\n                            .removeClass(classExpanderShowing);\n                    }\n\n                    // Run functions after resize\n                    expandActiveItem();\n                    mlnToggleExpander(false);\n                    assignFlowDirection();\n                });\n\n                // Run functions on load\n                expandActiveItem();\n                mlnToggleExpander(false);\n                assignFlowDirection();\n            }\n            mlnCurrent++;\n\n            $this.removeClass('mln--js-loading');\n        });\n    };\n}(jQuery));\n","(function($) {\n    'use strict';\n\n    var // Selector names\n        classHeader = 'l-header',\n        classOffCanvas = 'l-off-canvas',\n        classCanvas = 'l-canvas',\n        classToggleButton = 'toggle-off-canvas',\n        classOffCanvasNavRight = 'off-canvas-right',\n        classSiteHeaderFixed = 'has-header-fixed',\n        classOffCanvasOverlay = 'l-off-canvas-overlay',\n        classOffcanvasTransition = 'slide-over-transition',\n\n        // Modifier classes\n        classJsOffCanvasHidden = 'js-l-off-canvas-hide',\n        classJsNavIn = 'js-off-canvas-showing',\n\n        // Elements\n        toggleBtn = $('.' + classToggleButton),\n        offCanvasElement = $('.' + classOffCanvas),\n        offCanvasContent = $('.' + classHeader),\n        offCanvasOverlay = $('.' + classOffCanvasOverlay),\n        offCanvasBody = $('body'),\n        offCanvasCanvas = $('.' + classCanvas),\n\n        // Misc\n        headerHeight = $('.' + classHeader).outerHeight(),\n        docScrollLoc = 0,\n        currentLoc = 0,\n        focusIndex = 0,\n        focusBeforeOffCanvas,\n        tapping = false,\n        touchStartX,\n        touchStartY,\n        tabbableCount = 0,\n        offCanvasBreakpoint = $('body').attr('data-off-canvas-breakpoint');\n\n    // Get off canvas transition duration from css\n    var offCanvasDuration = $('.' + classOffcanvasTransition).css('transition-duration').replace('s', '') * 1000;\n\n    // Get browser width with or without scrollbar\n    function viewport() {\n        var e = window,\n            a = 'inner';\n\n        if (!('innerWidth' in window)) {\n            a = 'client';\n            e = document.documentElement || document.body;\n        }\n\n        return {\n            width: e[a + 'Width'],\n            height: e[a + 'Height']\n        };\n    }\n\n    // Resize delay\n    var windowWidth = $(window).width();\n    $(window).resize(function() {\n        var newWindowWidth = $(window).width();\n\n        if (windowWidth !== newWindowWidth) {\n            if (this.resizeTO) {\n                clearTimeout(this.resizeTO);\n            }\n            this.resizeTO = setTimeout(function() {\n                $(this).trigger('resizeEnd');\n            }, 150);\n        }\n        windowWidth = newWindowWidth;\n    });\n\n    // Check if is iOS device.\n    function isiOS() {\n        if (navigator.userAgent.match(/(iPod|iPhone|iPad)/)) {\n            offCanvasBody.addClass('is-ios');\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // Trap the keyboard to the off canvas elements when off canvas is showing\n    function trapKeyboardToOC() {\n\n        focusBeforeOffCanvas = $(':focus');\n\n        var tabbable = offCanvasElement.find(\n            'a[href],' +\n            'area[href],' +\n            'input:not([disabled]),' +\n            'select:not([disabled]),' +\n            'textarea:not([disabled]),' +\n            'button:not([disabled]),' +\n            'iframe,' +\n            'object,' +\n            'embed,' +\n            '[tabindex=\"0\"],' +\n            '[contenteditable]'\n        );\n\n        var firstTabbable = tabbable.first();\n        var lastTabbable = offCanvasElement.find('.js-tabfix');\n\n        // Set focus on first input\n        firstTabbable.focus();\n\n        //Escape key press\n        offCanvasElement.on('keydown', function(e) {\n            var childShowingAmount = $(this).find('.mln__child--transitioning').length;\n\n            if (e.keyCode === 27 && childShowingAmount === 0) {\n                e.preventDefault();\n                toggleOffCanvas('hide');\n            }\n        });\n\n\n        // Redirect last tab to first input\n        lastTabbable.on('keydown', function(e) {\n            if (e.which === 9 && !e.shiftKey) {\n                e.preventDefault();\n                firstTabbable.focus();\n            }\n        });\n\n        // Redirect first shift+tab to last input\n        firstTabbable.on('keydown', function(e) {\n            if (e.which === 9 && e.shiftKey) {\n                e.preventDefault();\n                lastTabbable.focus();\n            }\n        });\n\n        // Focus on the off canvas element\n        offCanvasElement.focus();\n    }\n\n\n    function toggleOffCanvas(action) {\n        docScrollLoc = $(document).scrollTop();\n\n        if (offCanvasBody.hasClass(classJsNavIn) || action === 'undefined' || action === 'hide') { // Close off canvas\n            offCanvasBody.removeClass(classJsNavIn);\n\n            // iOS Safari scroll canvas to the original canvas position\n            if (isiOS() && offCanvasBody.hasClass(classSiteHeaderFixed)) {\n                offCanvasCanvas.removeAttr('style');\n                offCanvasBody.animate({\n                    scrollTop: currentLoc\n                }, 0);\n            }\n\n            // After off canvas is hidden\n            setTimeout(function() {\n                if(!offCanvasBody.hasClass(classJsNavIn)) {\n                    offCanvasElement.addClass(classJsOffCanvasHidden);\n                }\n            }, offCanvasDuration);\n\n            // Syncing aria-expanded attribute on the menu button\n            toggleBtn.each(function(){\n                $(this).attr('aria-expanded', 'false');\n            });\n\n            // Focus on off canvas button\n            focusBeforeOffCanvas.focus();\n\n        } else if (!offCanvasBody.hasClass(classJsNavIn) || action === 'show') { // Open off canvas\n\n            offCanvasElement.removeClass(classJsOffCanvasHidden);\n\n            // iOS Safari set location of canvas so the user doesn't lose where they are\n            if (isiOS() && offCanvasBody.hasClass(classSiteHeaderFixed)) {\n                offCanvasCanvas.css({\n                    'top': -(docScrollLoc - headerHeight)\n                });\n            }\n\n            offCanvasBody.addClass(classJsNavIn);\n            currentLoc = docScrollLoc;\n\n            // Syncing aria-expanded attribute on the menu button\n            toggleBtn.each(function(){\n                $(this).attr('aria-expanded', 'true');\n            });\n\n            trapKeyboardToOC();\n        }\n    }\n\n    // Set height of the off canvas element\n    function setOffCanvasHeight() {\n        if (!$('body').hasClass('has-header-fixed')) {\n            var offCanvasHeight = $('.l-off-canvas__helper').outerHeight(),\n                surroundHeight = $('.l-surround').outerHeight(),\n                setHeight;\n\n            if (offCanvasHeight >= surroundHeight) {\n                setHeight = offCanvasHeight;\n            } else {\n                setHeight = surroundHeight;\n            }\n\n            setTimeout(function(){\n                if (viewport().width < offCanvasBreakpoint) {\n                    $('.' + classOffCanvas).css('min-height', setHeight);\n                } else {\n                    $('.' + classOffCanvas).css('min-height', '');\n                }\n            }, 300);\n        }\n    }\n\n    // Document ready\n    $(document).ready(function() {\n\n        // Build overlay that covers up the page content so it can't be interacted with when off canvas nav is enabled\n        $('.l-surround').prepend('<div class=\"' + classOffCanvasOverlay + '\"></div>');\n\n        // Get X location of user touch\n        offCanvasBody.bind('touchstart', function(e) {\n            touchStartX = e.originalEvent.touches[0].clientX;\n        });\n\n        // If user touches and moves a bit, close the hide the off canvas\n        offCanvasBody.bind('touchmove', function(e) {\n            var touchRight = e.originalEvent.changedTouches[0].clientX;\n\n            if (touchStartX - 80 > touchRight && offCanvasBody.hasClass(classJsNavIn) &&\n                !offCanvasBody.hasClass(classOffCanvasNavRight) && tapping !== true) {\n                toggleOffCanvas();\n            } else if (touchStartX + 80 < touchRight && offCanvasBody.hasClass(classJsNavIn) &&\n                offCanvasBody.hasClass(classOffCanvasNavRight) && tapping !== true) {\n                toggleOffCanvas();\n            }\n        });\n\n        offCanvasElement.addClass(classJsOffCanvasHidden)\n            .append('<span class=\"js-tabfix\" tabindex=\"0\" aria-hidden=\"true\"></span>');\n\n        // If user clicks (or taps) close the off canvas nav\n        $('.' + classToggleButton + ', .' + classOffCanvasOverlay).on('click', function() {\n            toggleOffCanvas();\n        });\n\n        setOffCanvasHeight();\n    });\n\n    // Resizer\n    $(window).bind('resizeEnd', function() {\n        setOffCanvasHeight();\n    });\n}(jQuery));\n","//\n// Initalize Multilevel Nav\n//\n\n$('#mainNav').multilevelNav({\n    'hoverIntent': true,\n    'hoverIntentTimeout': 200,\n    'autoDirection': true,\n    // 'toggleOnClickOnly': true,\n    'navbarMegaMenuBackdrop': true\n});\n\n\n\n\n//\n// Replace page bg after a set amount of clicks\n//\n\nvar replaceBodyBg = function(el, gifUrl, altText, clickCount) {\n    var $this = el,\n        origClickCount = clickCount,\n        clickCounter = 0,\n        replaceWithThisGif = gifUrl;\n\n    $($this).on('click', function(){\n        if (clickCounter >= origClickCount) {\n            $('.l-body').css('background-image', 'url(' + replaceWithThisGif + ')');\n\n            $('html').addClass('js-bg-replaced');\n        }\n        clickCounter++;\n    });\n};\nreplaceBodyBg('#raccoonImg', 'https://media.giphy.com/media/ifpqLMmOorPq0/giphy.gif', 'Raccoon rolling down hallway.', 15);\n\n\n\n\n//\n// Earbuds player\n//\n\nvar budsCount = 0,\n    clickCount = 0,\n    ytIDIndex = 0,\n    musicTrack,\n    clickTimeout,\n    randSoundID,\n    soundIDArray = [\n        'RBmoQSHfO2U?start=0&end=200', // Neil Cicierega: Annoyed Grunt\n        'PNcCPTgoPSI?start=0&end=298', // RZA: Slow Blues (instrumental)\n        'X4DE1wxgMwQ?start=0&end=171', // Party Favor: Wiggle Wop\n        'mSHUIEDBbl4?start=0&end=131', // Neil Cicierega: 300mb\n        'dQ4R30OhEAE?start=0&end=293', // 8 Bit Universe: Africa\n    ];\n\n$('<div class=\"js-buds-btn\" id=\"budsBtn\"></div>').appendTo('#robinImg');\n\n$('#budsBtn').on('mouseup', function(){\n    var $this = $(this);\n\n    budsCount++;\n    clickCount++;\n\n    // Stop youtube iframe from playing without completely removing it\n    $('.js-yt-iframe').removeAttr('src', '/');\n\n    if (budsCount === 1) {\n        ytIDIndex = Math.floor(Math.random()*soundIDArray.length);\n        randSoundID = soundIDArray[ytIDIndex];\n    } else {\n        if (ytIDIndex === soundIDArray.length - 1) {\n            ytIDIndex = 0;\n        } else {\n            ytIDIndex++;\n        }\n        randSoundID = soundIDArray[ytIDIndex];\n    }\n\n    var embedURL = 'https://www.youtube.com/embed/' + randSoundID + '&autoplay=1',\n        startTime = parseInt(randSoundID.split('?')[1].split('start=')[1]),\n        endTime = parseInt(randSoundID.split('?')[1].split('end=')[1]),\n        totalTime = 0;\n\n    totalTime = ((endTime - startTime) * 1000) + 1000;\n\n    clearTimeout(musicTrack);\n\n    if (clickCount === 1) {\n        clickTimeout = setTimeout(function(){\n            clickCount = 0;\n        }, 300);\n\n        if (budsCount === 1) {\n            $('<iframe class=\"js-yt-iframe position-absolute\" width=\"1\" height=\"1\" src=\"' + embedURL + '\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen></iframe>')\n                .insertAfter($(this));\n        } else {\n            $('.js-yt-iframe').attr('src', embedURL);\n        }\n\n        $this.css('cursor', 'pointer')\n            .parent()\n            .addClass('js-yt-playing');\n\n        musicTrack = setTimeout(function(){\n            $this.trigger('mouseup');\n        }, totalTime);\n\n    } else {\n        clearTimeout(clickTimeout);\n        clickCount = 0;\n    }\n}).on('dblclick', function(e){\n    e.preventDefault();\n\n    clearTimeout(musicTrack);\n\n    $('.js-yt-iframe').attr('src', '/');\n\n    $(this).parent().removeClass('js-yt-playing');\n});\n\n\n\n\n//\n// Check if page is scrolled to the top or not with vanilla js\n//\n\nvar checkScrollTop = function(el, className){\n    if ( el.scrollTop > 0 ) {\n        el.classList.add(className);\n    } else {\n        el.classList.remove(className);\n    }\n},\nscrollable = document.documentElement;\n\ncheckScrollTop(scrollable, 'js-has-scrolled');\n\nwindow.addEventListener('scroll', function() {\n    checkScrollTop(scrollable, 'js-has-scrolled');\n});\n\n\n\n\n//\n// Add snooper\n//\n\nvar snooperFollower = function() {\n    var snooper = $('.js-snooper');\n\n    if (snooper.length) {\n\n        // Cache selector and coordinates/widths initially\n        var followBoundaryOffsetX = snooper.offset().left - (snooper.outerWidth() / 1.6);\n\n        // Re-cache selector and coordinates/widths after screen width resize\n        $(window).bind('resizeEnd', function() {\n            followBoundaryOffsetX = snooper.offset().left - (snooper.outerWidth() / 1.6);\n        });\n\n        // Move the snooper elements\n        $(window).mousemove(function(e){\n            snooper.css({\n                'left': e.pageX - followBoundaryOffsetX\n            });\n        });\n    }\n};\n\nvar snooperHtml = $('<div class=\"js-snooper\">' +\n        '<img class=\"js-snooper__mug\" src=\"/images/mug.png\" alt=\"\">' +\n    '</div>');\n\nvar snooperMouseIdle;\n\n$('#squirrelImg').on('mouseenter', function(e){\n    if ( !$('.js-snooper').length ) {\n        snooperMouseIdle = setTimeout(function(){\n            snooperHtml.insertAfter('.l-header');\n            snooperFollower();\n        }, 7000);\n    }\n}).on('mouseleave', function(){\n    clearTimeout(snooperMouseIdle);\n});\n\n\n\n\n//\n// Abductor\n//\n\nvar abductEventEl = $('.cta-camp'),\n    abductor = [\n        'svg-bigfoot.svg',\n        'svg-laptop-guy.svg',\n        'svg-cow.svg'\n    ];\n\nvar ufoTimer;\nabductEventEl.on('mouseenter touchstart', function(){\n    var $this = $(this),\n        abductorSelected = Math.floor(Math.random() * abductor.length);\n        ufoHTML = $('<img class=\"camp-element camp-element--ufo\" src=\"/images/svg-ufo.svg?v3\" alt=\"\">' +\n            '<div class=\"camp-element camp-element--ufo-beam\">' +\n                '<img src=\"/images/svg-ufo--beam.svg?v3\" alt=\"\">' +\n                '<img class=\"camp-element camp-element--abductor\" src=\"/images/' + abductor[abductorSelected] + '\" alt=\"\">' +\n            '</div>');\n\n    var eNum = 0,\n        the51 = 102;\n    $(document).on('keydown', function(e){\n        eNum = e.which + eNum;\n\n        if (eNum === the51) {\n            if ($this.is(':hover')) {\n                clearTimeout(ufoTimer);\n                ufoHTML.insertAfter($this);\n                $this.addClass('area-51');\n            }\n        } else if (eNum > the51) {\n            eNum = 0;\n        }\n    });\n\n    clearTimeout(ufoTimer);\n    ufoTimer = setTimeout(function(){\n        if ($this.is(':hover')) {\n            ufoHTML.insertAfter($this);\n            $this.addClass('area-51');\n        }\n    }, 2000);\n}).on('mouseleave touchend', function(){\n    clearTimeout(ufoTimer);\n    $(this).removeClass('area-51');\n    $('.camp-element--ufo').remove();\n    $('.camp-element--ufo-beam').remove();\n});\n\n\n$(window).on('load', function(){\n    $('.remove-on-load').removeClass('remove-on-load');\n\n    $('.training')\n        .addClass('js-training--active')\n        .one('transitionend webkitTransitionEnd oTransitionEnd', function () {\n            $(this).removeClass('js-training--active');\n        });\n});\n\n\n\n\n//\n// Konami code\n//\n\nvar keyNum = 0,\n    konamiNum = 583;\n$(document).on('keydown', function(e){\n    keyNum = e.which + keyNum;\n\n    if (keyNum === konamiNum) {\n        $('<iframe id=\"contraIntro\" class=\"position-static\" width=\"1\" height=\"1\" style=\"opacity: 0;\" src=\"https://www.youtube.com/embed/0x4QnQbGdfU?autoplay=1\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen></iframe>')\n            .prependTo('body');\n\n        setTimeout(function(){\n            $('#contraIntro').remove();\n        }, 10000);\n    } else if (keyNum > konamiNum) {\n        keyNum = 0;\n    }\n});\n"]}