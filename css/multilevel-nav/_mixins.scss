$prefixes: -webkit-, -o-, -ms-, "";
$browser-context: 14;

// Border radius
@mixin border-radius($size...) {
	@if length($size) == 1 {
		border-radius: $size;
	} @else {
		@include custom-border-radius($size...);
	}
}

@mixin custom-border-radius($topLeft: 0, $topRight: 0, $bottomRight: 0, $bottomLeft: 0) {
	@each $prefix in $prefixes {
		@if $topLeft != 0 { border-top-left-radius: $topLeft; }
		@if $topRight != 0 { border-top-right-radius: $topRight; }
		@if $bottomRight != 0 { border-bottom-right-radius: $bottomRight; }
		@if $bottomLeft != 0 { border-bottom-left-radius: $bottomLeft; }
	}
}

@mixin aspect-ratio($width, $height) {
	position: relative;
	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> .content {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

// multiply levels of an element
@mixin level-multiplier($sel, $levels-deep) {
	$selOrig: $sel;

	@for $i from 1 to ($levels-deep + 1) {
        @if $i > 1 {
            $selCurr: $sel + ' ' + $selOrig;
            $sel: $selCurr;
        }
        #{$sel} {
            a {
                padding-left: $padding-menu-item-inset * $i;
            }
        }
    }
}
